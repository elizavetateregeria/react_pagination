{"version":3,"sources":["api/data.js","components/Pagination.js","App.js","index.js"],"names":["getData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","apply","this","arguments","Pagination","total","page","perPage","posts","onPageChange","onPerPageChange","lastIndex","startIndex","amountOfItems","length","react_default","createElement","Fragment","className","slice","map","item","key","id","title","type","disabled","onClick","Array","from","index","classNames","button_active","onChange","event","target","value","concat","App","state","currentPage","_this","setState","prevState","data","_this$state","components_Pagination","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d87e49e7.chunk.js","sourcesContent":["const API_URL = 'https://jsonplaceholder.typicode.com/posts';\n\nconst getData = async() => {\n  const response = await fetch(API_URL);\n\n  return response.json();\n};\n\nexport default getData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst Pagination = ({\n  total, page, perPage, posts, onPageChange, onPerPageChange,\n}) => {\n  const lastIndex = page * perPage;\n  const startIndex = lastIndex - perPage;\n  const amountOfItems = posts.length;\n  const handlePerPageChange = (event) => {\n    onPerPageChange(+event.target.value);\n  };\n\n  return (\n    <>\n      <ul className=\"pagination_list\">\n        {posts.slice(startIndex, lastIndex).map(item => (\n          <li key={item.id}>\n            {item.title}\n          </li>\n        ))}\n      </ul>\n      <button\n        type=\"button\"\n        className=\"button\"\n        disabled={page === 1}\n        onClick={() => onPageChange(page - 1)}\n      >\n        Prev\n      </button>\n      {Array.from(Array(total)).map((item, index) => (\n        <button\n          type=\"button\"\n          className={classNames('button',\n            { button_active: page === index + 1 })}\n          onClick={() => onPageChange(index + 1)}\n          key={index}\n        >\n          {index + 1}\n        </button>\n      ))}\n      <button\n        type=\"button\"\n        className=\"button\"\n        disabled={page === amountOfItems / perPage}\n        onClick={() => onPageChange(page + 1)}\n      >\n        Next\n      </button>\n      <select\n        className=\"pagination_select\"\n        onChange={handlePerPageChange}\n      >\n        <option value={5}>5</option>\n        <option value={10}>10</option>\n        <option value={20}>20</option>\n      </select>\n      <p>{`${startIndex + 1} - ${lastIndex} of ${amountOfItems}`}</p>\n    </>\n  );\n};\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  onPerPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport './App.css';\n\nimport getData from './api/data';\nimport Pagination from './components/Pagination';\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    total: 0,\n    page: 1,\n    perPage: 5,\n  };\n\n  async componentDidMount() {\n    const data = await getData();\n\n    this.setState(prevState => ({\n      posts: data,\n      total: data.length / prevState.perPage,\n    }));\n  }\n\n  onPageChange = (currentPage) => {\n    this.setState({ page: currentPage });\n  };\n\n  onPerPageChange = (perPage) => {\n    this.setState({\n      perPage,\n      page: 1,\n    },\n    () => this.setState(prevState => (\n      { total: prevState.posts.length / prevState.perPage }\n    )));\n  };\n\n  render() {\n    const {\n      page, total, perPage, posts,\n    } = this.state;\n\n    return (\n      <Pagination\n        total={total}\n        page={page}\n        perPage={perPage}\n        posts={posts}\n        onPageChange={this.onPageChange}\n        onPerPageChange={this.onPerPageChange}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}